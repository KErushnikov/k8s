apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
spec:
  serviceName: vault
  replicas: 1
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      securityContext:
        fsGroup: 1005
      initContainers:
        - name: restore-perms
          image: alpine
          command:
            - sh
            - -c
            - |
              echo "Restoring vault data..." && \
              if [ ! -f /vault/data/vault_data_restored ]; then \
                tar -xzf /backup/vault_backup.tar.gz -C /vault/data && \
                chown -R 1005:1005 /vault/data && \
                touch /vault/data/vault_data_restored; \
              else \
                echo "Already restored, skipping."; \
              fi
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: vault-data
              mountPath: /vault/data
            - name: vault-backup
              mountPath: /backup
      containers:
        - name: vault
          image: hashicorp/vault:1.16
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          ports:
            - containerPort: 8200
          env:
            - name: VAULT_LOCAL_CONFIG
              value: |
                {
                  "storage": {
                    "file": {
                      "path": "/vault/data"
                    }
                  },
                  "listener": {
                    "tcp": {
                      "address": "0.0.0.0:8200",
                      "tls_disable": 1
                    }
                  },
                  "ui": true
                }
          volumeMounts:
            - name: vault-data
              mountPath: /vault/data
      volumes:
        - name: vault-data
          persistentVolumeClaim:
            claimName: vault-data-pvc
        - name: vault-backup
          hostPath:
            path: /PVC/vault
            type: Directory