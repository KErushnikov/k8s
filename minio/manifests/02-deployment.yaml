---
apiVersion: v1
kind: Service
metadata:
  name: console
  labels:
    name: console
spec:
  ports:
    - port: 9001
      name: http
  selector:
    app: console
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: console
spec:
  replicas: 1
  selector:
    matchLabels:
      app: console
  template:
    metadata:
      labels:
        app: console
    spec:
      containers:
        - name: console
          image: quay.io/minio/minio:RELEASE.2025-06-13T11-33-47Z
          imagePullPolicy: "IfNotPresent"
          args:
            - server
            - --console-address
            - ":9001"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MINIO_DISTRIBUTED_MODE_ENABLED
              value: "yes"
            - name: MINIO_DISTRIBUTED_NODES
              value: "mi-{0...1}.mi-headless.minio.svc.cluster.local/data-{0...1}/data"
            - name: MINIO_SCHEME
              value: "http"
            - name: MINIO_FORCE_NEW_KEYS
              value: "no"
            - name: MINIO_ROOT_USER # MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: mi
                  key: user
            - name: MINIO_ROOT_PASSWORD # MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: mi
                  key: password
            - name: MINIO_SKIP_CLIENT
              value: "yes"
            - name: MINIO_BROWSER
              value: "on"
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
          ports:
            - containerPort: 9001
              name: http
---
apiVersion: v1
kind: Service
metadata:
  name: mi-console
  namespace: minio
  labels:
    app.kubernetes.io/name: mi-console
    app.kubernetes.io/instance: mi-console
spec:
  type: ClusterIP
  ports:
    - name: console
      port: 9001
      targetPort: console
  selector:
    app.kubernetes.io/name: mi-console
    app.kubernetes.io/instance: mi-console
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mi-console
  namespace: minio
  labels:
    app.kubernetes.io/name: mi-console
    app.kubernetes.io/instance: mi-console
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mi-console
      app.kubernetes.io/instance: mi-console
  serviceName: mi-console
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mi-console
        app.kubernetes.io/instance: mi-console
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mi
                    app.kubernetes.io/instance: mi
                namespaces:
                  - "minio"
                topologyKey: kubernetes.io/hostname
              weight: 100
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: minio
                    operator: In
                    values:
                      - "yes"
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: init-configs
          image: busybox:1.33.0
          imagePullPolicy: "IfNotPresent"
          command:
            - sh
            - -c
            - |
              if [ ! -d /data-0/data ]; then
                mkdir /data-0/data
                chown 1001:1001 /data-0/data
              fi
              if [ ! -d /data-1/data ]; then
                mkdir /data-1/data
                chown 1001:1001 /data-1/data
              fi
          volumeMounts:
            - name: data-0
              mountPath: /data-0
            - name: data-1
              mountPath: /data-1
      containers:
        - name: minio
          # image: quay.io/bitnami/minio:2021.6.17-debian-10-r14
          ## Fix to new container version
          image: quay.io/minio/minio:RELEASE.2025-06-13T11-33-47Z
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          args:
            - server
            - --console-address
            - ":9001"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MINIO_DISTRIBUTED_MODE_ENABLED
              value: "yes"
            - name: MINIO_DISTRIBUTED_NODES
              value: "mi-{0...1}.mi-headless.minio.svc.cluster.local/data-{0...1}/data"
            - name: MINIO_SCHEME
              value: "http"
            - name: MINIO_FORCE_NEW_KEYS
              value: "no"
            - name: MINIO_ROOT_USER # MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: mi
                  key: user
            - name: MINIO_ROOT_PASSWORD # MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: mi
                  key: password
            - name: MINIO_SKIP_CLIENT
              value: "yes"
            - name: MINIO_BROWSER
              value: "on"
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
          ports:
            - name: minio
              containerPort: 9000
              protocol: TCP
            - name: console
              containerPort: 9001
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: minio
              scheme: "HTTP"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: minio
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - mountPath: /data-0
              name: data-0
            - mountPath: /data-1
              name: data-1
      volumes:
        - hostPath:
            path: /PVC/minio/data-0
            type: DirectoryOrCreate
          name: data-0
        - hostPath:
            path: /PVC/minio/data-1
            type: DirectoryOrCreate
          name: data-1
