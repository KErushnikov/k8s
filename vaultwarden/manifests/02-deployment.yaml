apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      initContainers:
        - name: restore-data
          image: alpine
          command:
            - sh
            - -c
            - |
              if [ ! -f /data/vaultwarden/vaultwarden_data_restored ]; then
                echo "Restoring vaultwarden data to /data/vaultwarden ..."
                mkdir -p /data/vaultwarden && \
                tar -xzf /backup/vaultwarden_data_backup.tar.gz -C /data/vaultwarden && \
                touch /data/vaultwarden/vaultwarden_data_restored
              else
                echo "Data already restored, skipping."
              fi
          volumeMounts:
            - name: data
              mountPath: /data
            - name: backup
              mountPath: /backup
      containers:
        - name: vaultwarden
          image: vaultwarden/server:latest
          ports:
            - containerPort: 80
          env:
            - name: DOMAIN
              value: "https://pass.k.erushnikov.ru"
            - name: DATA_FOLDER
              value: "/data/vaultwarden"
          volumeMounts:
            - mountPath: /data
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: vaultwarden-data
        - name: backup
          hostPath:
            path: /data/PVC/vaultwarden/vaultwarden_data_backup.tar.gz
            type: File